************
**  TODO  **
************

- out of bounds collision
	- combine neighboured tiles into bigger collisions to have as few collision shapes as possible

- broad phase for collisions
	- grid based (low constant overhead, narrow phase can run into performance issues when things clump up )
	- quadtree subdivision (more overhead when updating stuff, less narrow phase collisions have to calced)

- level editor or procedural level creation?
	- level1: reach target zone (tutorial deco images)
	- level2: do an easy passenger and reach target zone in time
	- level3: do 3 passengers (in time)
	- level4: [QUESTIONABLE] collect 1000pts (passengers, collectables, close calls, combos) and reach target zone

- GUI: add on-screen instructions (controls, goals, hints)
	- add "get to your homestation" objective in the list when targetzones are active
	- use checkbox when any objective is complete
	- add info about picking up / loosing passengers, gaining points and loosing time when hitting cars
	- add gamestate to show pre-game information (text, images)

 - add gfx effects 
		- for steam from the engine wagon
		- for environment particles
		- particle effects when colliding

- TLevel_Builder: create 2 renderTextures from all static city elements. ground + above_train

- train vs train collision
- check all wagons of a train for collision [only against non-static categories]

- saving/loading of levels from files
	- define level saving format

**********************
**	GAMEPLAY IDEAS	**
**********************

- spline undo only possible with "construction workers" in wagons
	- restricted uses (fillable by picking up construction site workers?))
	- restricting the number of passengers i can pick up

- add optional targets to score more points or have an objective at all (passengers)
	- add more to passengers
		- lodgings (number of wagons they occupy)
		- distance to target
			- used as a multi for points.. points=(lodgings+1)*multi
		- fixed points
	- stations that have to be served at a specific time window 

 - loosing wagons when colliding with cars (instead of passengers)
	- wagons should be collectable
	- dropping where the crash occured ?

 - power ups
	- longer rail segments
	- more wagons for a time period (30 - 60sec?)

********************
**	QUESTIONABLE  **
********************
- autocasting rails:
	- add info about current angle [done] and current speed (circle from (0) to 2 to 4)
	- only show current angle for first rail
- spline undo: (optional) copy removed triangles vertices and apply them to another texture of a construction site
- add spline redo
- make collisionmanager running in an own thread calling callbacks on overlap ?
- abstract gamestates into tgf
	- running: load, initloadedlevel, pause, win, loose, restart
	- pause: as is?
	- end: as is?
	- level_interface: load(), restart()


************
**	DONE  **
************
- first iteration on "out of bounds collision"
	- fixed: collisionzones around the map do not trigger

- for tutorial level
	- red type only includes houses blocking full tiles
	- yellow type includes houses blocking "half" tiles
	- include images in places in level_info	

- GUI:
	- add arrows to objectives

- Game Logic:
	- hitting cars cannot be avoided all the time
		- decrease penalty of hitting cars to loosing a passenger and 5 seconds (screenshake, onscreen info (-5sec, -1 passenger))

- autocasting rails:
	- left click (holding down or toggle?) starts casting rails (maybe rightclick to stop casting when toggle mode)
	- while holding the speed of placing rails increases (2 per sec --> 4 per sec) using cooldown (500-250ms to prevent mouse1 spamming)
	( - while holding the maximum turn angle decreases (20° to 10°) )
	- how to measure the angle: current mouse pos vs starting mouse pos x value? always same y value -> angle
	- can be clicked anywhere on the screen

- proc gen of city
	- road gen 
	- road triangulation
	- obstacle gen (houses, walls, trees, lakes, streetlamps)
	- other background gen (grass)
	- redo collision images to contain only convex polys (multicolor)
	- TCollisionZone for houses
	- TCollisionZone for lake
	- trees
- add traffic
- add un-do of spline
	- use controlpoints (tags) for undo/redo. when undo happend, just cut the spline at the calculated pointcount.
	- when undo happened, redo is possible until a new controlpoint was appended
	- use right click for undo, apply penalty player (cooldown, penalty time to not build a new seg, money, uses (fillable by picking up construction site workers?))
- splineTexture: use catmullrom normals to generate a vertexbuffer with texture bending in railtrack
- added option to calculate normals in catmullrom spline
- processinputcomponent -> single segment input, polyline input, polyline mindist <> drawrect.size
	- rework catmull-rom spline to be more curvy: maybe restrict in input controlpoints or downsample the points, use chordal
	- use last controlpoint of a track for the display as well
- use component based system (unique_ptr)
	- gameobject : entity {components_; draw/update: for(components_) c->draw()/c->update(); }
	- component : entity {ownerobject_; draw/update: manipulate_or_extend_ownerobject(); } maybe friend class?
		- moveTo/moveBy (for hitzones)
- abstract collisionManager + collisionEntity into gameframework
	- traincollisionmanager, TObstacle derived from that
- add drawing states to init drawing outside of the rect (drawing begins inside the rect tho)
- added gamestates: mainmenu, pause, win/loose screen
- interate on the collision detection
	- actual shapes/rectangles testing
	- onEnter / onLeave system (not spamming the callbacks when hit in several updates)	
- create collisionmanager
	- collision channels (obstacle vs trains)
- add obstacles to loose the game
- add target zones to win the game
- place stuff on track < 0.0 results in pos = 0 or something off
- smooth camera movement
- camera focused on end of the track instead of the train (+rotation)
- implement circular catmul rom spline to prevent self intersections ect. (see http://www.cemyuksel.com/research/catmullroparam_/catmullrom.pdf, https://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/)
- add spline class for smooth railtracks
	c1 continuity, local control, interpolation: catmull rom, bezier, herminte
- new track segment is not streched to full length now because the min/max thingy doesnt work as intended
	- THIS MAY EVEN BE A FEATURE?! try when spline is done
- extend track by input